{"mappings":"AACkBA,SAASC,cAAc,KAC/BC,UAAUC,IAAI,QACxB,MAAMC,EAAOJ,SAASC,cAAc,QACpCG,EAAKC,MAAMC,WAAa,6BAA6BC,QAAwBA,OAC7EH,EAAKC,MAAMG,WAAa,iCAKXR,SAASC,cAAc,QAApC,MAEMQ,EAAYC,MAAMC,iBAAiB,uBAgCzC,SAASJ,IACP,MAAO,IAAIK,KAAKC,MAAsB,SAAhBD,KAAKE,UACxBC,SAAS,IACTC,SAAS,EAAG,I,CAlCjBC,QAAQC,IAAI,gBACZD,QAAQC,IAAIT,GAEZU,aAAaC,UACbD,aAAaE,UACbF,aAAaG","sources":["src/js/03-feedback.js"],"sourcesContent":["// --------------Сonnecting styles---------------------------\nconst itemStyle = document.querySelector('a');\nitemStyle.classList.add('link');\nconst body = document.querySelector('body');\nbody.style.background = `linear-gradient(to right, ${getRandomHexColor()}, ${getRandomHexColor()})`;\nbody.style.transition = 'background-color 2s linear-out';\n\n// form.style.margin = '200px 180px';\n// ------------------------------------------------------------\n\nconst form = document.querySelector('form');\n// const form = document.querySelector('.feedback-form');\nconst inputSave = input.addEventListener(\"input[name='email']\");\nconsole.log('PRIVET ORLAM');\nconsole.log(inputSave);\n\nlocalStorage.setItem();\nlocalStorage.getItem();\nlocalStorage.removeItem();\n\n// В HTML есть разметка формы. Напиши скрипт который будет сохранять значения полей в локальное хранилище когда пользователь что-то печатает.\n\n// <form class=\"feedback-form\" autocomplete=\"off\">\n//   <label>\n//     Email\n//     <input type=\"email\" name=\"email\" autofocus />\n//   </label>\n//   <label>\n//     Message\n//     <textarea name=\"message\" rows=\"8\"></textarea>\n//   </label>\n//   <button type=\"submit\">Submit</button>\n// </form>\n\n// Выполняй это задание в файлах 03-feedback.html и 03-feedback.js. Разбей его на несколько подзадач:\n\n// Отслеживай на форме событие input, и каждый раз записывай в локальное хранилище объект с полями email и message,\n//  в которых сохраняй текущие значения полей формы.Пусть ключом для хранилища будет строка \"feedback-form-state\".\n// При загрузке страницы проверяй состояние хранилища, и если там есть сохраненные данные, заполняй ими поля формы.\n// В противном случае поля должны быть пустыми.\n// При сабмите формы очищай хранилище и поля формы, а также выводи объект с полями email, message и текущими их значениями в консоль.\n// Сделай так, чтобы хранилище обновлялось не чаще чем раз в 500 миллисекунд. Для этого добавь в проект и используй\n// библиотеку lodash.throttle.\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n// --without red color - #00FFFF-------"],"names":["document","querySelector","classList","add","$945622fd0f572e60$var$body","style","background","$945622fd0f572e60$var$getRandomHexColor","transition","$945622fd0f572e60$var$inputSave","input","addEventListener","Math","floor","random","toString","padStart","console","log","localStorage","setItem","getItem","removeItem"],"version":3,"file":"03-feedback.1f62955b.js.map"}